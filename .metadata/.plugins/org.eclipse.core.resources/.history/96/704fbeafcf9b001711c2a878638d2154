package com.nextgate.chriscoyle.controller;

import java.sql.SQLException;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;

import com.nextgate.chriscoyle.service.ArtistInformation;
import com.nextgate.chriscoyle.service.LoginDelegate;
import com.nextgate.chriscoyle.service.SearchDelegate;
import com.nextgate.chriscoyle.view.LoginBean;
import com.nextgate.chriscoyle.view.SearchBean;

@Controller
public class SearchController {
	
	@Autowired
	private LoginDelegate loginDelegate;
	
	@Autowired
	private SearchDelegate searchDelegate;

	
	
	
	@RequestMapping(value="/search.html",method=RequestMethod.GET)
	public ModelAndView displaySearch(){

		ModelAndView model = new ModelAndView("search");
		return model;
	}
	
	
	
	@RequestMapping(value="/search.html",method=RequestMethod.POST)
	public ModelAndView executeLogin(@ModelAttribute("loginBean")LoginBean loginBean) throws SQLException{

		ModelAndView model= null;
		boolean isValidUser = loginDelegate.isValidUser(loginBean.getUsername(), loginBean.getPassword());

		if(isValidUser == true){
			
			model = new ModelAndView("search");	
		}
		else{
			model = new ModelAndView("login");
		}
		return model;
	}
	
	
	
	@RequestMapping(value="/searchResults.html",method=RequestMethod.POST)
	public ModelAndView displayResults(@ModelAttribute("searchBean")SearchBean searchBean) throws SQLException{

		ModelAndView model = new ModelAndView("/results");
		
		searchDelegate.requestSearchResults(searchBean.getSearchOption(), searchBean.getSearchValue());
		List<ArtistInformation> artistInfo = searchDelegate.getResultsList();
		
				
		if(searchBean.getSearchOption().equals("singer")){

			return model.addObject("singerInfo", artistInfo);
		}
		else if(searchBean.getSearchOption().equals("album_name")){

			return model.addObject("albumInfo", artistInfo);
		}
		return null;
	}
}
